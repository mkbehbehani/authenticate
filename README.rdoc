== Web app with authentication, written in Ruby on Rails.
The application has user MVC, with the registration page passing the user attributes to the database via the registration form. 
When a user is created, the "has_secure_password" enables bcrypt encryption of the password, and generates the auth_token used for recognizing the 
user's session cookie and for password resets. Admin roles and before filters can be added for increased security, but were left off to allow inspection of the application from the browser.


To get the application up and running you will need Rails and Ruby installed.


$rake db:create
$rake db:migrate
$rake db:seed

Running rake db:seed should load seed.rb through the application and into the database. As it does this, it will encrypt the provided password and generate the user's authorization token. 

Run $ rails c
	$ User.all
Returns:
(note the password has been encrypted into password_digest and auth_token has been generated)

1.9.3-p392 :001 > User.all
  User Load (0.2ms)  SELECT "users".* FROM "users" 
 => [#<User id: 1, name: "Albert Einstein", email: "einstein@gmail.com", password_digest: "$2a$10$.dg9nGkx1IhA.3Swg/8VouTKRxQ4llCamTW68Bu5ixaA...", created_at: "2013-04-26 17:21:44", updated_at: "2013-04-26 17:21:44", auth_token: "z0YvDjAz3COlTn8Hrbpiaw", question: nil, password_reset_token: nil>, #<User id: 2, name: "Nikolai Tesla", email: "tesla@gmail.com", password_digest: "$2a$10$rep0r05qXxxy8/cvC7pHqeDFH/ScI2FaFFZ7sekStzDm...", created_at: "2013-04-26 17:21:44", updated_at: "2013-04-26 17:21:44", auth_token: "_ixjfZEgVYQXlMGtSjKyzw", question: nil, password_reset_token: nil>] 

==Using the application
Start a rails server once previous rake tasks have completed 

$rails s 

navigate to localhost:3000 in your browser

To view all users, as well as show, edit and destroy, navigate to localhost:3000/users
These actions would typically be restricted using admin roles and before_filters, but are currently accessible for inspection.

==Password Resets
When a user enters their email address to request a password reset, an email is sent with a url containing the auth_token. This is then interpreted by the password_resets controller, and redirects the user toward an edit method. The configuration files can be found in config/environments, allowing the mailer to be plugged into a mail service such as SendGrid for production. In the local server, the mail delivery is handled on localhost:3000.


Demo of the password reset mailer from development log:

"Sent mail to mkbehbehani@gmail.com (7ms)
Date: Fri, 26 Apr 2013 00:06:42 -0500
From: from@example.com
To: mkbehbehani@gmail.com
Message-ID: <517a0b624a1e7_19dc3ff0221d3100680e8@mashallah-ubuntu.mail>
Subject: Password Reset Request
Mime-Version: 1.0
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

Hello, please reset your password by clicking the link below:

http://localhost:3000/password_resets/IX_gs8yus4ffqoHfAIy5Kw/edit
Redirected to http://localhost:3000/
Completed 302 Found in 663ms (ActiveRecord: 142.7ms"